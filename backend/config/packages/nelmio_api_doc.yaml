nelmio_api_doc:
    documentation:
        info:
            title: Portfolio API
            version: 1.0.0
        servers:
          - url: http://portfolio/api
        paths:
            /categories:
                get:
                    summary: List all Categories
                    tags: 
                        - Categories
                    description: ''
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Category'
                post:
                    summary: Add a new Category
                    tags: 
                        - Categories
                    requestBody:
                        description: "**Category** that need to be added"
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Category'
                        required: true
                    responses:
                        '201':
                            description: "New **Category** resource created"
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Category'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                        '400':
                            description: Syntax error, Validations errors of fields, Wrong attributes
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error400'
            /categories/{id}:
                get:
                    summary: Return a Categories by his ID
                    tags: 
                        - Categories
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Category resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Category'
                        '404':
                            description: Resource **Category** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                put:
                    summary: Updated an existing Category by his {id}
                    tags: 
                        - Categories
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Category resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer    
                    requestBody:
                        description: Category that need to be updated
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Category'
                        required: true
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Category'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                        '404':
                            description: Resource not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                delete:
                    summary: Delete an existing Category
                    tags: 
                        - Categories
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Category resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: " **Category** Resource id deleted"
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/DeleteMessage'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                        '404':
                            description: Resource **Category** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
            /projects:
                get:
                    summary: List all Project
                    tags: 
                        - Projects
                    description: ''
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Project'
                post:
                    summary: Add a new Project
                    tags: 
                        - Projects
                    requestBody:
                        description: "**Project** that need to be added"
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Project_post'
                            multipart/form-data:
                                schema:
                                    $ref: '#/components/schemas/Project_form_data'       
                        required: true
                    responses:
                        '201':
                            description: "New **Project** resource created"
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Project'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                        '400':
                            description: Syntax error, Validations errors of fields, Wrong attributes
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error400'
            /projects/{id}:
                get:
                    summary: Return a Project by his ID
                    tags: 
                        - Projects
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of project resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Project'
                        '404':
                            description: Resource **Project** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                put:
                    summary: Updated an existing Project by his {id}
                    tags: 
                        - Projects
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Category resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer   
                    requestBody:
                        description: Project that need to be updated
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Project'
                            multipart/form-data:
                                schema:
                                    $ref: '#/components/schemas/Project_form_data' 
                        required: true
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Project'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                delete:
                    summary: Delete an existing Project
                    tags: 
                        - Projects
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of project resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: " **Project** Resource id deleted"
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/DeleteMessage'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource **Project** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'            
            /experiences:
                get:
                    summary: List all Experiences
                    tags: 
                        - Experiences
                    description: ''
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Experience'
                post:
                    summary: Add a new Experience
                    tags: 
                        - Experiences
                    requestBody:
                        description: "**Experience** that need to be added"
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Experience'
                            multipart/form-data:
                                schema:
                                    $ref: '#/components/schemas/Experience_form_data'
                        required: true
                    responses:
                        '201':
                            description: "New **Experience** resource created"
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Experience'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                        '400':
                            description: Syntax error, Validations errors of fields, Wrong attributes
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error400'
            /experiences/{id}:
                get:
                    summary: Return a Experience by his ID
                    tags: 
                        - Experiences
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Experience resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Experience'
                        '404':
                            description: Resource **Experience** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                put:
                    summary: Updated an existing Experience by his {id}
                    tags: 
                        - Experiences
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Category resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer    
                    requestBody:
                        description: Experience that need to be updated
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Experience'
                            multipart/form-data:
                                schema:
                                    $ref: '#/components/schemas/Experience_form_data'
                        required: true
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Experience'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                        '404':
                            description: Resource not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                delete:
                    summary: Delete an existing Experience
                    tags: 
                        - Experiences
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Experience resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: " **Experience** Resource id deleted"
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/DeleteMessage'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource **Experience** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
            /skills:
                get:
                    summary: List all Skills
                    tags: 
                        - Skills
                    description: ''
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Skill'
                post:
                    summary: Add a new Skill
                    tags: 
                        - Skills
                    requestBody:
                        description: "**Skill** that need to be added"
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Skill'
                            multipart/form-data:
                                schema:
                                    $ref: '#/components/schemas/Skill_form_data'
                        required: true
                    responses:
                        '201':
                            description: "New **Skill** resource created"
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Skill'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                        '400':
                            description: Syntax error, Validations errors of fields, Wrong attributes
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error400'
            /skills/{id}:
                get:
                    summary: Return a Skill by his ID
                    tags: 
                        - Skills
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Skill resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Skill'
                        '404':
                            description: Resource **Skill** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                put:
                    summary: Updated an existing Skill by his {id}
                    tags: 
                        - Skills
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Category resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    requestBody:
                        description: Skill that need to be updated
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Skill'
                            multipart/form-data:
                                schema:
                                    $ref: '#/components/schemas/Skill_form_data'
                        required: true
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Skill'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                delete:
                    summary: Delete an existing Skill
                    tags: 
                        - Skills
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Skill resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: " **Skill** Resource id deleted"
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/DeleteMessage'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource **Skill** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
            /softwares:
                get:
                    summary: List all Softwares
                    tags: 
                        - Softwares
                    description: ''
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Software'
                post:
                    summary: Add a new Software
                    tags: 
                        - Softwares
                    requestBody:
                        description: "**Software** that need to be added"
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Software'
                            multipart/form-data:
                                schema:
                                    $ref: '#/components/schemas/Software_form_data'
                        required: true
                    responses:
                        '201':
                            description: "New **Software** resource created"
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Software'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                        '400':
                            description: Syntax error, Validations errors of fields, Wrong attributes
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error400'
            /softwares/{id}:
                get:
                    summary: Return a Software by his ID
                    tags: 
                        - Softwares
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Software resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Software'
                        '404':
                            description: Resource **Software** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                put:
                    summary: Updated an existing Software by his {id}
                    tags: 
                        - Softwares
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Category resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    requestBody:
                        description: Software that need to be updated
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Software'
                        required: true
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Software'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                delete:
                    summary: Delete an existing Software
                    tags: 
                        - Softwares
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Software resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: " **Software** Resource id deleted"
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/DeleteMessage'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource **Software** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
            /login_check:
                post:
                    summary: Get JWT Token
                    tags: 
                        - Login
                    requestBody:
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Login'
                        required: true
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Token'
                        '401':
                            description: Invalid credentials
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Login_fail'                            
            /presentations/{id}:
                get:
                    summary: Return the presentation (id = "1")
                    tags: 
                        - Presentation
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Presentation 1"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Software'
                        '404':
                            description: Resource **Presentation** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                put:
                    summary: Updated the presentation 1
                    tags: 
                        - Presentation
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Presentation 1"
                          required: true
                          schema:
                            type: integer
                    requestBody:
                        description: Presentation that need to be updated
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Presentation'
                        required: true
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Presentation'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
            /contacts:
                get:
                    summary: List all Contact
                    tags: 
                        - Contacts
                    description: ''
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Contact'
                post:
                    summary: Add a new Contact
                    tags: 
                        - Contacts
                    requestBody:
                        description: "**Contact** that need to be added"
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Contact'
                            multipart/form-data:
                                schema:
                                    $ref: '#/components/schemas/Contact_form_data'
                        required: true
                    responses:
                        '201':
                            description: "New **Contact** resource created"
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Contact'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'
                        '400':
                            description: Syntax error, Validations errors of fields, Wrong attributes
                            content:
                                application/json:
                                    schema:
                                        $ref: '#/components/schemas/Error400'
            /contacts/{id}:
                get:
                    summary: Return a Contact by his ID
                    tags: 
                        - Contacts
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Contact resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Contact'
                        '404':
                            description: Resource **Contact** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                put:
                    summary: Updated an existing Contact by his {id}
                    tags: 
                        - Contacts
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Category resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    requestBody:
                        description: Contact that need to be updated
                        content: 
                            application/json: 
                                schema:
                                    $ref: '#/components/schemas/Contact'
                            multipart/form-data:
                                schema:
                                    $ref: '#/components/schemas/Contact_form_data'
                        required: true
                    responses:
                        '200':
                            description: Successful response
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Contact'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
                delete:
                    summary: Delete an existing Contact
                    tags: 
                        - Contacts
                    parameters:
                        - name: id
                          in: path 
                          description: "**ID** of Contact resource. *Example: 5,11.*"
                          required: true
                          schema:
                            type: integer
                    responses:
                        '200':
                            description: " **Contact** Resource id deleted"
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/DeleteMessage'
                        '401':
                            description: Unauthorized
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error401'                
                        '404':
                            description: Resource **Contact** not found
                            content:
                                application/json: 
                                    schema:
                                        $ref: '#/components/schemas/Error404'
        components:
            securitySchemes:
                Bearer:
                    type: http
                    scheme: bearer
                    bearerFormat: JWT
            schemas:
                Project:
                    type: object
                    properties:
                        id:
                            type: integer
                        name:
                            type: string
                        description:
                            type: string
                        url: 
                            type: string
                            format: url
                        img_static:
                            type: string
                        alt_static:
                            type: string
                        creation_date:
                            type: string
                            format: date-time
                    required:
                        - id
                        - name 
                        - description
                        - url
                        - img_static
                        - alt_static
                        - creation_date   
                Project_post:
                    type: object
                    properties:
                        name:
                            type: string
                        description:
                            type: string
                        url: 
                            type: string
                        img_static:
                            type: string
                        alt_static:
                            type: string
                        creation_date:
                            type: string
                            format: date-time
                    required:
                        - id
                        - name 
                        - description
                        - url
                        - img_static
                        - alt_static
                        - creation_date 
                Project_form_data: 
                    properties:
                        name:
                            type: string
                        description:
                            type: string
                        url: 
                            type: string
                        img_static:
                            type: string
                            format: binary
                        alt_static:
                            type: string
                        creation_date:
                            type: string
                            format: date-time
                    required:
                        - id
                        - name 
                        - description
                        - url
                        - img_static
                        - alt_static
                        - creation_date
                Experience:
                    type: object
                    properties:
                        id:
                            type: integer
                        name:
                            type: string
                        description:
                            type: string
                        company: 
                            type: string
                        logo_company:
                            type: string
                        start_date:
                            type: string
                            format: date-time                            
                        end_date:
                            type: string
                            format: date-time
                    required:
                        - id
                        - name 
                        - description
                        - company
                        - logo_company
                        - start_date
                        - end_date
                Experience_form_data:
                    type: object
                    properties:
                        id:
                            type: integer
                        name:
                            type: string
                        description:
                            type: string
                        company: 
                            type: string
                        logo_company:
                            type: string
                            format: binary
                        start_date:
                            type: string
                            format: date-time                            
                        end_date:
                            type: string
                            format: date-time
                    required:
                        - id
                        - name 
                        - description
                        - company
                        - logo_company
                        - start_date
                        - end_date
                Category:
                    type: object
                    properties:
                        id:
                            type: integer
                        name:
                            type: string
                    required:
                        - id
                        - name  
                Skill:
                    type: object
                    properties:
                        id:
                            type: integer
                        name:
                            type: string
                        icon:
                            type: string
                        description:
                            type: string
                        level: 
                            type: integer
                    required:
                        - id
                        - name
                        - icon
                        - description
                        - level
                Skill_form_data:
                    type: object
                    properties:
                        id:
                            type: integer
                        name:
                            type: string
                        icon:
                            type: string
                            format: binary
                        description:
                            type: string
                        level: 
                            type: integer
                    required:
                        - id
                        - name
                        - icon
                        - description
                        - level        
                Software:
                    type: object
                    properties:
                        id:
                            type: integer
                        name:
                            type: string
                        icon:
                            type: string
                        level:
                            type: string
                    required:
                        - id
                        - name
                        - icon
                        - level
                Software_form_data:
                    type: object
                    properties:
                        id:
                            type: integer
                        name:
                            type: string
                        icon:
                            type: string
                            format: binary
                        level:
                            type: string
                    required:
                        - id
                        - name
                        - icon
                        - level
                Presentation: 
                    type: object
                    properties:
                        id:
                            type: integer
                        first_name:
                            type: string
                        last_name:
                            type: string
                        picture:
                            type: string
                        quote:
                            type: string
                        title_first_text:
                            type: string
                        first_text:
                            type: string
                        title_second_text:
                            type: string
                        second_text:
                            type: string
                        title_third_text:
                            type: string
                        third_text:
                            type: string 
                Contact: 
                    type: object
                    properties:
                        id: 
                            type: integer
                        title:
                            type: string
                        link:
                            type: string
                            format: url
                        icon:
                            type: string
                    required:
                        - id
                        - title
                        - link
                        - icon
                Contact_form_data: 
                    type: object
                    properties:
                        id: 
                            type: integer
                        title:
                            type: string
                        link:
                            type: string
                            format: url
                        icon:
                            type: string
                            format: binary
                    required:
                        - id
                        - title
                        - link
                        - icon
                Login: 
                    type: object
                    properties:
                        email:
                            type: string
                            format: email
                        password:
                            type: string   
                    required:
                        - username
                        - password
                Login_fail:
                    type: object
                    properties:
                        status:
                            type: string
                        message: 
                            type: string 
                    example: 
                        status: 401
                        message: 'Invalid credentials' 
                Token: 
                    type: object
                    properties:
                        token:
                            type: string
                SuccessMessage:
                    type: object
                    properties:
                        status:
                            type: int
                        message:
                            type: string
                    example: 
                        status: 200
                        message: 'Syntax error'
                DeleteMessage:
                    type: object
                    properties:
                        status:
                            type: int
                        message:
                            type: string
                    example: 
                        status: 200
                        message: "Resource 'ID' deleted"
                Error400:
                    type: object
                    properties:
                        status:
                            type: int
                        message:
                            type: string
                    example: 
                        status: 400
                        message: 'Syntax error'
                Error401:
                    type: object
                    properties:
                        status:
                            type: int
                        message:
                            type: string
                    example: 
                        status: 401
                        message: 'Unauthorized'
                Error404:
                    type: object
                    properties:
                        status:
                            type: integer
                        message:
                            type: string
                    example: 
                        status: 404
                        message: 'Resource ID not found'
                    
        security:
            - Bearer: []
    areas: # to filter documented areas
        path_patterns:
            - ^/api$ # Accepts routes under /api except /api/doc
